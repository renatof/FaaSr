#pre_faasr_image
FROM rocker/tidyverse

#Install Dependencies
RUN apt-get -yq update && \
    apt-get -yq install \
		python3 \
		python3-pip
RUN update-ca-certificates \
    && pip install --upgrade pip setuptools six \
    && pip install --no-cache-dir gevent==21.12.0 flask==2.1.2


#Install required R packages
RUN R -e "install.packages('aws.s3', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('jsonlite', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('devtools', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('jsonvalidate', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('RCurl', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('httr', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('uuid', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('paws', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('githubinstall', repos='https://cloud.R-project.org')"


#==============================================Lambda function & Github Actions
# Install dependencies
RUN apt-get update && \
    apt-get install -y \
        curl \
        unzip \
        g++ \
        make \
        cmake \
        libcurl4-openssl-dev

# Create function directory
RUN mkdir -p /lambda_runtime
RUN mkdir -p /action
# Install the AWS Lambda Runtime Interface Client for Python
RUN pip install \
    --target /lambda_runtime \
        awslambdaric

# Copy function code
COPY app/* /action
# Copy Python wrapper
COPY lambda_function.py /lambda_runtime

# Install the AWS Lambda Runtime Interface Emulator
RUN curl -Lo /usr/bin/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && \
    chmod +x /usr/bin/aws-lambda-rie
COPY entry.sh /lambda_runtime/
RUN chmod 755 /lambda_runtime/entry.sh

#==============================================Openwhisk
#Setup port
ENV FLASK_PROXY_PORT 8080

#Copy and make files/directoreis for actionProxy
RUN mkdir -p /actionProxy/owplatform
ADD actionproxy.py /actionProxy/
ADD owplatform/__init__.py /actionProxy/owplatform/
ADD owplatform/knative.py /actionProxy/owplatform/
ADD owplatform/openwhisk.py /actionProxy/owplatform/

#Setup basic executable
ADD app/exec_owld.R /action/exec_ow
RUN chmod +x /action/exec_ow

#Add source R file - this will be removed once the library generated.
ADD https://raw.githubusercontent.com/renatof/FaaSr/main/R/faasr.R /action/

#Add json schema
ADD https://raw.githubusercontent.com/renatof/FaaSr/main/schema/FaaSr.schema.json /action/

CMD ["/bin/bash","-c","cd actionProxy && python3 actionproxy.py"]
